{"version":3,"sources":["images/todoIcon.png","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todoList","submitHandler","onChangeHandler","deleteHandler","entryText","isCompleteHandler","className","src","todoIcon","alt","map","item","isComplete","style","textDecoration","text","onClick","id","onSubmit","e","type","placeholder","value","onChange","App","useState","setEntryText","uuidv4","setTodoList","preventDefault","trim","todoListCopy","newItem","push","newText","target","filter","targetItem","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAAe,G,MAAA,IAA0B,sC,OC0B1BA,EAvBF,SAAC,GAA+F,IAA7FC,EAA4F,EAA5FA,SAAUC,EAAkF,EAAlFA,cAAeC,EAAmE,EAAnEA,gBAAiBC,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,kBAEhF,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAU,YAAYC,IAAKC,EAAUC,IAAI,KAC9C,6CACA,oBAAIH,UAAU,YAAd,SACKN,EAASU,KAAI,SAAAC,GAAI,OACd,qBAAIL,UAAU,YAAd,UACKK,EAAKC,WAAa,mBAAGC,MAAO,CAAEC,eAAgB,gBAA5B,SAA+CH,EAAKI,OAAY,4BAAIJ,EAAKI,OAC5F,wBAAQT,UAAU,YAAYU,QAAS,kBAAMX,EAAkBM,EAAKM,KAApE,SAAyE,mBAAGX,UAAU,yBACtF,wBAAQA,UAAU,aAAaU,QAAS,kBAAMb,EAAcQ,EAAKM,KAAjE,SAAsE,mBAAGX,UAAU,+BAHxDK,EAAKM,SAO5C,uBAAMX,UAAU,kBAAkBY,SAAU,SAACC,GAAD,OAAOlB,EAAckB,EAAGf,IAApE,UACI,uBAAOE,UAAU,YAAYc,KAAK,OAAOC,YAAY,gBAAgBC,MAAOlB,EAAWmB,SAAU,SAACJ,GAAD,OAAOjB,EAAgBiB,MACxH,wBAAQb,UAAU,UAAUc,KAAK,SAAjC,SAA0C,mBAAGd,UAAU,+BCqDxDkB,MApEf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOrB,EAAP,KAAkBsB,EAAlB,KACA,EAAgCD,mBAAS,CACvC,CACER,GAAIU,cACJZ,KAAM,WACNH,YAAY,GAEd,CACEK,GAAIU,cACJZ,KAAM,WACNH,YAAY,GAEd,CACEK,GAAIU,cACJZ,KAAM,aACNH,YAAY,KAdhB,mBAAOZ,EAAP,KAAiB4B,EAAjB,KA2DA,OACE,qBAAKtB,UAAU,MAAf,SACE,cAAC,EAAD,CAAMN,SAAUA,EAAUC,cApCR,SAACkB,EAAGJ,GAGxB,GAFAI,EAAEU,iBAEGd,EAAKe,OAAV,CAIA,IAAMC,EAAY,YAAO/B,GAEnBgC,EAAU,CACdf,GAAIU,cACJZ,KAAMA,EACNH,YAAY,GAGdmB,EAAaE,KAAKD,GAClBJ,EAAYG,GACZL,EAAa,MAmB6CxB,gBA1CpC,SAACiB,GACvB,IAAMe,EAAUf,EAAEgB,OAAOb,MACzBI,EAAaQ,IAwC+E9B,UAAWA,EAAWD,cAP9F,SAACc,GACrB,IAAMc,EAAe,YAAI/B,GAAUoC,QAAO,SAAAzB,GAAI,OAAIA,EAAKM,KAAOA,KAC9DW,EAAYG,IAKoI1B,kBAfxH,SAACY,GACzB,IAAMc,EAAY,YAAO/B,GACnBqC,EAAaN,EAAaO,MAAK,SAAA3B,GAAI,OAAIA,EAAKM,KAAOA,KACzDoB,EAAWzB,YAAcyB,EAAWzB,WACpCgB,EAAYG,SC7CDQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bb3fdc84.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/todoIcon.6820232d.png\";","import React from 'react';\r\nimport todoIcon from '../images/todoIcon.png'\r\n\r\nconst Todo = ({ todoList, submitHandler, onChangeHandler, deleteHandler, entryText, isCompleteHandler }) => {\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <img className=\"todo-icon\" src={todoIcon} alt=\"\" />\r\n            <h3>REACT TO DO</h3>\r\n            <ul className=\"todo-list\">\r\n                {todoList.map(item => (\r\n                    <li className=\"todo-item\" key={item.id}>\r\n                        {item.isComplete ? <p style={{ textDecoration: \"line-through\" }}>{item.text}</p> : <p>{item.text}</p>}\r\n                        <button className=\"check-btn\" onClick={() => isCompleteHandler(item.id)}><i className=\"fas fa-check fa-lg\"></i></button>\r\n                        <button className=\"delete-btn\" onClick={() => deleteHandler(item.id)}><i className=\"fas fa-trash-alt fa-lg\"></i></button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <form className=\"input-container\" onSubmit={(e) => submitHandler(e, entryText)}>\r\n                <input className=\"input-box\" type=\"text\" placeholder=\"Enter Task...\" value={entryText} onChange={(e) => onChangeHandler(e)} />\r\n                <button className=\"add-btn\" type=\"submit\"><i className=\"fas fa-plus fa-lg\"></i></button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;\r\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport Todo from './components/Todo';\n\nfunction App() {\n  const [entryText, setEntryText] = useState(\"\");\n  const [todoList, setTodoList] = useState([\n    {\n      id: uuidv4(),\n      text: \"Task one\",\n      isComplete: false\n    },\n    {\n      id: uuidv4(),\n      text: \"Task two\",\n      isComplete: false\n    },\n    {\n      id: uuidv4(),\n      text: \"Task three\",\n      isComplete: false\n    }\n  ]);\n\n  // Text handler\n  const onChangeHandler = (e) => {\n    const newText = e.target.value;\n    setEntryText(newText);\n  };\n\n  // Submit handler\n  const submitHandler = (e, text) => {\n    e.preventDefault();\n\n    if (!text.trim()) {\n      return;\n    }\n\n    const todoListCopy = [...todoList];\n\n    const newItem = {\n      id: uuidv4(),\n      text: text,\n      isComplete: false\n    };\n\n    todoListCopy.push(newItem);\n    setTodoList(todoListCopy);\n    setEntryText(\"\");\n  };\n\n  // isComplete Handler\n  const isCompleteHandler = (id) => {\n    const todoListCopy = [...todoList];\n    const targetItem = todoListCopy.find(item => item.id === id);\n    targetItem.isComplete = !targetItem.isComplete;\n    setTodoList(todoListCopy);\n  };\n\n  // Delete handler\n  const deleteHandler = (id) => {\n    const todoListCopy = [...todoList].filter(item => item.id !== id);\n    setTodoList(todoListCopy);\n  };\n\n  return (\n    <div className=\"App\">\n      <Todo todoList={todoList} submitHandler={submitHandler} onChangeHandler={onChangeHandler} entryText={entryText} deleteHandler={deleteHandler} isCompleteHandler={isCompleteHandler} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}